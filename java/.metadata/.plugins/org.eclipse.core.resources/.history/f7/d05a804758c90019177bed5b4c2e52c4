package comm.example.controller;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import comm.example.factory.MyConnectionFactory;
import comm.example.model.Employee;

@WebServlet("/controller.view")
public class Controller extends HttpServlet {
	private static final long serialVersionUID = 1L;

	private static final String ResultSet = null;
	
	private String name,email,password;
	private List<String> errMsgs;
    
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try {
			doProcess(request, response);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try {
			doProcess(request, response);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	protected void doProcess(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
		errMsgs=new LinkedList<String>();
		name=request.getParameter("name");
		if(season.equals("unknown"))
		{
			errMsgs.add("please select a valid season.");
		}
		
		year=request.getParameter("year");
		try {
			iYear=Integer.parseInt(year);
			
		} catch (Exception e) {
			// TODO: handle exception
			errMsgs.add("year must be numeric");
		}
		
		
		title=request.getParameter("title");
		if(title.toString().length()<5)
		{
			errMsgs.add("title is too short.");
		}
		
		if(errMsgs.isEmpty())
		{
			
			request.setAttribute("SUCCESS", new League(title, season, iYear));
			Connection connection = MyConnectionFactory.getMySqlConnectionForHR();
			PreparedStatement st= connection.prepareStatement("Select Max(uid) from league");
			ResultSet id=st.executeQuery();
			int Uid=Integer.parseInt(ResultSet);
			
			PreparedStatement pst= connection.prepareStatement("Insert into league(title,season,year,uid) values(?,?,?,?)");
			
			pst.setString(1, title);
			pst.setString(2, season);
			pst.setInt(3, iYear);
			pst.setInt(4, ++Uid);
			pst.executeUpdate();
			
			RequestDispatcher  view=request.getRequestDispatcher("success.view");
			view.forward(request, response);
		}
		else {
			request.setAttribute("ERROR", errMsgs);
			RequestDispatcher view=request.getRequestDispatcher("/AddLeague.view");
			view.forward(request, response);
		}
		
	}

   

}
