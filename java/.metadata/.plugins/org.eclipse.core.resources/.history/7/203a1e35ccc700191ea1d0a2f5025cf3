package JSwingChat;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.UnknownHostException;
import java.awt.event.ActionEvent;

public class Server extends JFrame {

	private JPanel contentPane;
	private JTextField textField;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Server frame = new Server();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Server() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		textField = new JTextField();
		textField.setBounds(88, 69, 263, 20);
		contentPane.add(textField);
		textField.setColumns(10);
		
		JButton btnClickToTrn = new JButton("Click to trn on the chat");
		btnClickToTrn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0){
				

		        // Default port number we are going to use
		        int portnumber = 1236;
		       
		        
		        // Create a MulticastSocket
		        MulticastSocket chatMulticastSocket;
				try {
					chatMulticastSocket = new MulticastSocket(portnumber);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		        
		        // Determine the IP address of a host, given the host name
		        InetAddress group;
				try {
					group = InetAddress.getByName("225.0.0.1");

			        
			        // Joins a multicast group
			        chatMulticastSocket.joinGroup(group);
			        
				} catch (UnknownHostException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		        // Prompt a user to enter a message
		        String msg = "";
		        System.out.println("Type a message for the server:");
		        BufferedReader br =
		                new BufferedReader(new InputStreamReader(System.in));
		        msg = br.readLine();
		        
		        // Send the message to Multicast address
		        DatagramPacket data = new DatagramPacket(msg.getBytes(), 0, msg.length(), group, portnumber);
		        chatMulticastSocket.send(data);
		        
		        // Close the socket
		        chatMulticastSocket.close();
			}
		});
		btnClickToTrn.setBounds(133, 27, 174, 20);
		contentPane.add(btnClickToTrn);
	}
}
