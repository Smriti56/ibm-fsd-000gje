package SwingNetwork;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JTextPane;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class Client extends JFrame {

	private JPanel contentPane;
	private JTextField textField;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		
		Socket client = null;
        int portnumber = 1234;
        
        
        try {
            String msg = "";
            
            // Create a client socket  
            
            client = new Socket(InetAddress.getLocalHost(), portnumber);
            System.out.println("Client socket is created " + client);
            
            // Create an output stream of the client socket
            OutputStream clientOut = client.getOutputStream();
            PrintWriter pw = new PrintWriter(clientOut, true);
            
            // Create an input stream of the client socket
            InputStream clientIn = client.getInputStream();
            BufferedReader br = new BufferedReader(new
                    InputStreamReader(clientIn));
            
            // Create BufferedReader for a standard input
            BufferedReader stdIn = new BufferedReader(new
                    InputStreamReader(System.in));
            
            System.out.println("Enter your name. Type Bye to exit. ");
            
            
            msg = stdIn.readLine().trim();
            pw.println(msg);
            
            System.out.println("Message returned from the server = " + br.readLine());
            
            pw.close();
            br.close();
            client.close();
            
           
   
            
        } catch (IOException ie) {
            System.out.println("I/O error - Start server and turn off Firewall" + ie);
        }
        
        
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Client frame = new Client();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Client() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblEnterNumber = new JLabel("Enter Number");
		lblEnterNumber.setBounds(42, 69, 112, 24);
		contentPane.add(lblEnterNumber);
		
		textField = new JTextField();
		textField.setBounds(158, 71, 86, 20);
		contentPane.add(textField);
		textField.setColumns(10);
		
		JButton btnCalculate = new JButton("Calculate");
		btnCalculate.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				int n=Integer.parseInt(textField.getText());
				
	            
				
			}
		});
		btnCalculate.setBounds(295, 70, 89, 23);
		contentPane.add(btnCalculate);
		
		JTextPane textPane = new JTextPane();
		textPane.setBounds(101, 126, 206, 76);
		contentPane.add(textPane);
	}
}
